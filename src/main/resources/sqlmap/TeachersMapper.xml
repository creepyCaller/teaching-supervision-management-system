<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.cuit.tsmgr.dao.TeachersMapper" >
    <resultMap id="BaseResultMap" type="cn.edu.cuit.tsmgr.model.Teachers" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="teachername" property="teachername" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Base_Column_List" >
        id,
        teachername
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from teachers
        where
        id = #{id,jdbcType=INTEGER}
            
    </select>

    <delete id="deleteByPrimaryKey" >
        delete from teachers
        where
        id = #{id,jdbcType=INTEGER}
        
    </delete>

    <delete id="deleteByPrimaryKeys" >
        delete from teachers
        where <foreach collection="primaryKeys" item = "primaryKey" separator=" or " >id = #{primaryKey,jdbcType=INTEGER}</foreach>
    </delete>

    <insert id="insert" parameterType="cn.edu.cuit.tsmgr.model.Teachers" >
        insert into teachers (
            id,
            teachername
        )
        values (
            #{id,jdbcType=INTEGER},
            #{teachername,jdbcType=VARCHAR}
        )
    </insert>

    <insert id="insertSelective" parameterType="cn.edu.cuit.tsmgr.model.Teachers" >
        insert into teachers
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="teachername != null" >
                teachername,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="teachername != null" >
                #{teachername,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="cn.edu.cuit.tsmgr.model.Teachers" >
        update teachers
        <set >
            <if test="id != null" >
                id = #{id,jdbcType=INTEGER},
            </if>
            <if test="teachername != null" >
                teachername = #{teachername,jdbcType=VARCHAR},
            </if>
        </set>
            where
            id = #{id,jdbcType=INTEGER}
                
    </update>

    <update id="updateByPrimaryKey" parameterType="cn.edu.cuit.tsmgr.model.Teachers" >
        update teachers
        set
        <trim suffixOverrides="," >
            teachername = #{teachername,jdbcType=VARCHAR},
        </trim>
        where
        id = #{id,jdbcType=INTEGER}
            
    </update>

    <select id="loadModels" resultMap="BaseResultMap">
        select
        <if test="parameters != null">
            ${parameters}
        </if>
        <if test="parameters == null">
            *
        </if>
        from teachers
        <if test="condition != null">
            where ${condition}
        </if>
        <if test="order != null and sort != null">
            order by ${order} ${sort}
        </if>
        <if test="offset != -1 and limit != -1">
            limit #{offset,jdbcType=INTEGER}, #{limit,jdbcType=INTEGER}
        </if>
    </select>

    <select id="loadMaps" resultType="java.util.HashMap">
        select
        <if test="parameters != null">
         ${parameters}
        </if>
        <if test="parameters == null">
            *
        </if>
        from teachers
        <if test="condition != null">
            where ${condition}
        </if>
        <if test="order != null and sort != null">
            order by ${order} ${sort}
        </if>
        <if test="offset != -1 and limit != -1">
            limit #{offset,jdbcType=INTEGER}, #{limit,jdbcType=INTEGER}
        </if>
    </select>

    <select id="count" resultType="long">
        select count(
        <if test="isDistinct == true">
            distinct
        </if>
        <if test="parameters != null">
            ${parameters}
        </if>
        <if test="parameters == null">
            *
        </if>
        ) from teachers
        <if test="condition != null">
            where ${condition}
        </if>
    </select>

    <select id="findModel" resultMap="BaseResultMap" >
        select
        <if test="parameters != null">
            ${parameters}
        </if>
        <if test="parameters == null">
            *
        </if> from teachers
        where
        id = #{id,jdbcType=INTEGER}
            
    </select>

    <select id="findMap" resultType="java.util.HashMap" >
        select
        <if test="parameters != null">
            ${parameters}
        </if>
        <if test="parameters == null">
            *
        </if> from teachers
        where
        id = #{id,jdbcType=INTEGER}
            
    </select>
</mapper>